%form{ :id => 'config_form', :action => '/config', :method => 'post', :name => 'config', :onsubmit => 'sendConfig(); return false;', :onreset => 'closeConfig(); return false;' }
  %div
    %table
      %tr
        %th#config_warning.error_message{ :colspan => 2 } 
      %tr
        %th{ :colspan => 2 } General Settings
      %tr
        %td
          %label{:for => "default_color"} Default color
        %td
          %input{ :name => 'default_color', :type => 'color', :value => graph.conf['default_color'] }
      %tr
        %td
          %label{:for => "token_color"} Token color
        %td
          %input{ :name => 'token_color', :type => 'color', :value => graph.conf['token_color'] }
      %tr
        %td
          %label{:for => "found_color"} Found color
        %td
          %input{ :name => 'found_color', :type => 'color', :value => graph.conf['found_color'] }
      %tr
        %td
          %label{:for => "filtered_color"} Filtered color
        %td
          %input{ :name => 'filtered_color', :type => 'color', :value => graph.conf['filtered_color'] }
      %tr
        %td
          %label{:for => "edge_weight"} Edge weight
        %td
          %input{ :name => 'edge_weight', :type => 'number', :value => graph.conf['edge_weight'] }
  %div
    %table
      %tr
        %th{ :colspan => 2 } Layers
      - graph.conf['layers'].each_with_index do |layer, i|
        %tr
          %td
            %label{:for => "layers[#{i}[name]]"} Name
          %td
            %input{ :name => "layers[#{i}[name]]", :type => 'text', :value => layer['name'] }
        %tr
          %td
            %label{:for => "layers[#{i}[attr]]"} Attributes
          %td
            %input{ :name => "layers[#{i}[attr]]", :type => 'text', :value => layer['attr'] }
        %tr
          %td
            %label{:for => "layers[#{i}[shortcut]]"} Shortcut
          %td
            %input{ :name => "layers[#{i}[shortcut]]", :type => 'text', :value => layer['shortcut'] }
        %tr
          %td
            %label{:for => "layers[#{i}[color]]"} Color
          %td
            %input{ :name => "layers[#{i}[color]]", :type => 'color', :value => layer['color'] }
        %tr
          %td
            %label{:for => "layers[#{i}[weight]]"} Edge weight
          %td
            %input{ :name => "layers[#{i}[weight]]", :type => 'number', :value => layer['weight'] }
  %div
    %table
      %tr
        %th{ :colspan => 2 } Layer combinations
      - graph.conf['combinations'].each_with_index do |combination, i|
        %tr
          %td
            %label{:for => "combinations[#{i}[name]]"} Name
          %td
            %input{ :name => "combinations[#{i}[name]]", :type => 'text', :value => combination['name'] }
        %tr
          %td
            %label{:for => "combinations[#{i}[attr]]"} Attributes
          %td
            - graph.conf['layers'].each_with_index do |layer, ii|
              - if combination['attr'].include?(layer['attr'])
                %input{ :name => "combinations[#{i}[attr[#{ii}]]]", :type => 'checkbox', :value => layer['attr'], :checked => 'checked' }= layer['attr']
              - else
                %input{ :name => "combinations[#{i}[attr[#{ii}]]]", :type => 'checkbox', :value => layer['attr'] }= layer['attr']
              %br
        %tr
          %td
            %label{:for => "combinations[#{i}[shortcut]]"} Shortcut
          %td
            %input{ :name => "combinations[#{i}[shortcut]]", :type => 'text', :value => combination['shortcut'] }
        %tr
          %td
            %label{:for => "combinations[#{i}[color]]"} Color
          %td
            %input{ :name => "combinations[#{i}[color]]", :type => 'color', :value => combination['color'] }
        %tr
          %td
            %label{:for => "combinations[#{i}[weight]]"} Edge weight
          %td
            %input{ :name => "combinations[#{i}[weight]]", :type => 'number', :value => combination['weight'] }
  %div
    %input{ :type => 'reset', :value => 'Cancel' }
    %input{ :type => 'submit', :value => 'Save' }
