:s: 'cat:S | token:// & pos:/^v/ & !in(cat:pr|aux|op)'
:rp: 'cat:RP | token:// & (in(cat:s|a|p|m|g|t|ad) | in(cat:co & start(cat:RP|RC)) | in(cat:pr & start(cat:S|SC)))'
:args: 'edge(cat:pt)* edge(cat:s|a|p|m|g|t|ad|pr)'
:co: 'edge(cat:pt)* edge(cat:co)'

:reifications: ['re', 'ev', 'fct', 'spa', 'q', 'va']
:direct_speech: ['ds']
:valency:
 - ['s']
 - ['a', 'p']
 - ['m', 'g', 't']

:shortcuts:
 -
  :search: |
   node @arg1 cat:S
   node @arg2 cat:S
   link @arg1@arg2 edge(cat:ad & f-layer:t)@edges
  :exec: |
   add_predication(:args => [@arg2, @arg1], :anno => {'rel' => @edges[0]['rel']})
   de_sem(@edges[0])
# -
#  :search: |
#   node @rp cat:RP
#   node @nmlz
#   link @rp@nmlz edge(cat:/^nmlz-/)@edges
#  :exec: |
#   ref = @rp.referent
#   pred = add_predication(:clause => @rp)
#   add_edge('g', ref, @nmlz, {'cat' => 'ex', 'f-layer' => 't', 'sentence' => ref.sentence})
#   add_argument(:pred => pred, :ref => ref, :term => @nmlz, :role => @edges[0]['cat'].partition('-').last)
